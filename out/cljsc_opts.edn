{:print-no-newline #object[clojure.core$print 0x2ba412e3 "clojure.core$print@2ba412e3"], :output-dir "out", :flush #object[clojure.core$flush 0x54dd0b9f "clojure.core$flush@54dd0b9f"], :closure-warnings {:check-types :off, :check-variables :off}, :closure-defines {}, :inits [{:type :init-forms, :forms nil}], :read #object[cljs.repl$repl_read 0x46ece1cb "cljs.repl$repl_read@46ece1cb"], :ups-libs nil, :cache-analysis true, :closure-module-roots [], :def-emits-var true, :optimizations :none, :cljs.closure/watch-triggered-build? true, :ups-foreign-libs [{:file "cljsjs/react-dom/development/react-dom.inc.js", :file-min "cljsjs/react-dom/production/react-dom.min.inc.js", :provides ["react-dom" "cljsjs.react.dom"], :requires ["react"], :global-exports {react-dom ReactDOM}} {:file "cljsjs/react-dom/development/react-dom-server.browser.inc.js", :file-min "cljsjs/react-dom/production/react-dom-server.browser.min.inc.js", :provides ["react-dom/server" "cljsjs.react.dom.server"], :requires ["react-dom"], :global-exports #:react-dom{server ReactDOMServer}} {:file "cljsjs/react-dom/development/react-dom-test-utils.inc.js", :file-min "cljsjs/react-dom/production/react-dom-test-utils.min.inc.js", :provides ["react-dom/test-utils" "cljsjs.react.dom.test-utils"], :requires ["react-dom"], :global-exports #:react-dom{test-utils ReactTestUtils}} {:file "cljsjs/react/development/react.inc.js", :provides ["react" "cljsjs.react"], :requires [], :file-min "cljsjs/react/production/react.min.inc.js", :global-exports {react React}}], :verbose true, :aot-cache true, :preloads [process.env clojure.browser.repl.preload], :print #object[clojure.core$println 0x7a518b7a "clojure.core$println@7a518b7a"], :ignore-js-module-exts [".css"], :source-map-inline true, :prompt #object[cljs.repl$repl_prompt 0x5b535388 "cljs.repl$repl_prompt@5b535388"], :preamble ["cljs/imul.js"], :repl-requires [[clojure.browser.repl] [clojure.browser.repl.preload]], :browser-repl true, :ups-externs ("cljsjs/react-dom/common/react-dom-server.ext.js" "cljsjs/react-dom/common/react-dom.ext.js" "cljsjs/react-dom/common/react-dom-test-utils.ext.js" "cljsjs/react/common/react.ext.js"), :opts-cache "cljsc_opts.edn", :reader #object[cljs.repl$repl_STAR_$fn__6950 0x11235c85 "cljs.repl$repl_STAR_$fn__6950@11235c85"], :cljs.cli/commands {:groups #:cljs.repl.browser{:repl {:desc "browser REPL options"}}, :init {["-H" "--host"] {:group :cljs.repl.browser/repl, :fn #object[cljs.repl.browser.BrowserEnv$fn__7796 0x675f0f80 "cljs.repl.browser.BrowserEnv$fn__7796@675f0f80"], :arg "address", :doc "Address to bind"}, ["-p" "--port"] {:group :cljs.repl.browser/repl, :fn #object[cljs.repl.browser.BrowserEnv$fn__7798 0x2651dff0 "cljs.repl.browser.BrowserEnv$fn__7798@2651dff0"], :arg "number", :doc "Port to bind"}}}, :source-map true, :need-prompt #object[cljs.repl$repl_STAR_$fn__6952 0x160eed08 "cljs.repl$repl_STAR_$fn__6952@160eed08"], :cache-analysis-format :transit, :caught #object[cljs.repl$repl_caught 0x1dc25c38 "cljs.repl$repl_caught@1dc25c38"], :emit-constants nil, :cljs.repl/fast-initial-prompt? false}